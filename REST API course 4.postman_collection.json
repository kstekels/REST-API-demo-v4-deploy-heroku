{
	"info": {
		"_postman_id": "9ccc2b5d-91ee-4a78-b28a-ac95096319a5",
		"name": "REST API course 4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14519612"
	},
	"item": [
		{
			"name": "/items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NjIxMjM5MzUsImlhdCI6MTY2MjEyMzYzNSwibmJmIjoxNjYyMTIzNjM1LCJpZGVudGl0eSI6MX0.jYuV_JEFQ-TyPcuT4GrhDm4k1Xms_4ERGdqO6vJXIKc",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{domain_url}}/items",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"items"
					]
				},
				"description": "This should return list of items, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/stores",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NjIxMjM5MzUsImlhdCI6MTY2MjEyMzYzNSwibmJmIjoxNjYyMTIzNjM1LCJpZGVudGl0eSI6MX0.jYuV_JEFQ-TyPcuT4GrhDm4k1Xms_4ERGdqO6vJXIKc",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "{{domain_url}}/stores",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"stores"
					]
				},
				"description": "This should return list of stores, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{domain_url}}/item/phone",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"item",
						"phone"
					]
				},
				"description": "This will return one specific item, uniquely identified by its name. No two items have the same name."
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{domain_url}}/store/1",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"store",
						"1"
					]
				},
				"description": "This will return the specific store, uniquely identified by its name. No two stores have the same name."
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{domain_url}}/store/test",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"store",
						"test"
					]
				},
				"description": "This will create a store"
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{domain_url}}/store/test",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"store",
						"test"
					]
				},
				"description": "This will delete the store"
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NjIxMjM5MzUsImlhdCI6MTY2MjEyMzYzNSwibmJmIjoxNjYyMTIzNjM1LCJpZGVudGl0eSI6MX0.jYuV_JEFQ-TyPcuT4GrhDm4k1Xms_4ERGdqO6vJXIKc",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": 29.99\n}"
				},
				"url": {
					"raw": "{{domain_url}}/item/phone2",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"item",
						"phone2"
					]
				},
				"description": "This will create a new item. If item already exist, it will fail."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NjIxMjM5MzUsImlhdCI6MTY2MjEyMzYzNSwibmJmIjoxNjYyMTIzNjM1LCJpZGVudGl0eSI6MX0.jYuV_JEFQ-TyPcuT4GrhDm4k1Xms_4ERGdqO6vJXIKc",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": 59.99\n}"
				},
				"url": {
					"raw": "{{domain_url}}/item/<name>",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"item",
						"<name>"
					]
				},
				"description": "This will create a new item. If item already exist, it will update existing item."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Authorization",
						"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NjIxMjM5MzUsImlhdCI6MTY2MjEyMzYzNSwibmJmIjoxNjYyMTIzNjM1LCJpZGVudGl0eSI6MX0.jYuV_JEFQ-TyPcuT4GrhDm4k1Xms_4ERGdqO6vJXIKc",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{domain_url}}/item/<name>",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"item",
						"<name>"
					]
				},
				"description": "Delete the item, identified by name."
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"tests[\"AccessToken check\"] = jsonData.access_token !== undefined;",
							"",
							"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"karlis\",\n    \"password\": \"12345\"\n}"
				},
				"url": {
					"raw": "{{domain_url}}/auth",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "/register",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"karlis\",\n    \"password\": \"12345\"\n}"
				},
				"url": {
					"raw": "{{domain_url}}/register",
					"host": [
						"{{domain_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://127.0.0.1:5000"
		},
		{
			"key": "jwt_token",
			"value": "\"\""
		}
	]
}